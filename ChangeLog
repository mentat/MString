MString & MStringArray - Dynamic string data type library
Copyright (C) 2000 Jesse L. Lovelace

.1BETA - Initial release as GString.

.2BETA (non-released) - Name changed to MString to avoid imcompatibilty
      with gtk+ (which has a GString data type).

.3 - * Recursive rewrite of Reverse()
     * Rewrote many functions to improve speed and decrease mem usage
	 * Added MNode * tailMNode to MString object.  Concatination
        speed increased greatly. Size increased by sizeof(MNode*)
     * Header file cleaned up a little.
	 * Input operators accually work now. :(
	 * testG() now reports head and tail node pointers

.3.1 - * Additional header file documentaion added, more information on
          each function included.

0.3.2 - * Added char& operator [](int nIndex) function with allows []
          access at lefthand value (you can set the char using [], CString
          does not allow this)
        * Added char* ToChar() which returns a pointer to a character string
          containing a copy of the contents in the MString object.
        * Added Split() function to MStringArray.
	* Added ToInt();
	* Find() rewritten for speed.
	* "char string[]" notation removed, all char strings are now 
	   "char* string"
	* Replace() rewritten for speed.
	* SpanExcluding & SpanIncluding rewritten for speed.

0.5.0 - * Changed a bunch of stuff and I hope it all still works. :)
	* First release of MStringArray (BETA 1)

0.50a - * Included a configure script (need feedback on if this works
	well).

0.60  - * I'm back from the summer!!!  Fixed varius bugs and am working on 
	new features.  Thanks to: Sven Dawitz, Sean Rae, & Shaohui Yan
	for their bug reports.
	* Fixed (hopefully) insert() bug.
	* You can now do '+' with integers.
	* Other misc bugfixes.
	* Working on the makefile problems.

0.60a - * Fixed bug in double number conversion--thanks to Danny Horswell.

0.62  - * Changed #include <iostream.h> to the depreciated form of 
          #include <iostream> and added the "using" lines to make it still
          compile. Also changed #inlcude <fstream.h> to #include <fstream>
        * Fixed bug in GetBuffer; it didn't add the terminiating null '\0'.
          Should Fix Bug# 784452
        * Fixed bug in constructor "MString(const char * string)"; it did not
          like a string where the only character is a null '\0'.
        * Also fixed "MString(const char * string, int nLength)".
        * Added Functionality to ToInt() so that it can take a negative number.
        * Added ToDouble() based on the ToInt() class.
        * Made char* in Format() const char*
        * Fixed the ReleaseBuffer() function to handle when a new length
          parameter is passed in. Hopefully ;)
        * Added functions CompareGlob (public) and Gmatch (private) for 
          performing wildcard comparisons.
        * Fixed int constructor and int operator= to handle zero
        * Hopefully fixed the Compare( char* ) function to handle strings that
          are the same up to a point, but one is longer than the other.
          e.g. "abc" != "abcd".
        * Some initializing functions handled an empty string differently.
          Now, initializing an MString from an empty string (ie str[0] = '\0'
          results in an MString with no allocated nodes. 
          Should Fix Bug# 1062897
        * Fixed the ReleaseBuffer() function to handle when a new length
          parameter is NOT passed in. Hopefully ;)
        * Added "=" to (nIndex >= GetLength()) in GetAt() and operator[].
        * Added operator!=(const MString& s1, const char* s2)

0.70    * Move to the LGPL
        * Optimized Compare( Mstring& )
        * Added default 0 to ToInt; skip GetLength and List Traversal if 0
        * Added default -1 to GetBuffer to alert user that they don't have 
          to pass in a value
        * Added bModified to speed up GetBuffer()
        * Optimize GetAt(), operator[], and SetAt().
        * Fix Delete and remove unnecessary if statement (Bug# 1108090).
        * Misc. Formatting.

0.71    * Add ToUnsignedInt()
        * Add ToHex()
